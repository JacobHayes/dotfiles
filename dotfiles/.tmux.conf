unbind C-b
set -g prefix `
bind ` send-prefix

# Don't rename windows automatically
set-option -g allow-rename off
# But do renumber them (ex: closing window 1 with windows 0, 1, 2)
set-option -g renumber-windows on

# Don't allow repeat of keys (affects select-pane, resize-pane) b/c it makes changing panes and then quickly typing be interpreted as commands
set-option -g repeat-time 0

# Only shink window if smaller screen is watching it
set-window-option -g aggressive-resize on

# Use the current directory when creating new windows or panes. Also use | and - for pane splitting
#
# pane_current_path doesn't seem to work with fish3, so need some fancier stuff.
bind c run-shell 'tmux new-window      "cd (tmux showenv -g TMUXPWD_(echo #D | tr -d %) | sed -e \"s/^.*=//\"); exec $SHELL"'
bind - run-shell 'tmux split-window -v "cd (tmux showenv -g TMUXPWD_(echo #D | tr -d %) | sed -e \"s/^.*=//\"); exec $SHELL"'
bind | run-shell 'tmux split-window -h "cd (tmux showenv -g TMUXPWD_(echo #D | tr -d %) | sed -e \"s/^.*=//\"); exec $SHELL"'
unbind %
unbind '"'

# Use k for the tree based pane selection (default is s). With a prefix of ` it's easier to use a right side shortcut.
bind k choose-tree -Zs
unbind s

# Shortcuts to make the pane larger or smaller by 5 pixels
bind u resize-pane -U 1
bind e resize-pane -D 1
bind l resize-pane -L 1
bind r resize-pane -R 1
# Shortcuts to resize panes
bind -n S-UP if-shell "$is_vim" "send-keys S-Up" "resize-pane -U"
bind -n S-DOWN if-shell "$is_vim" "send-keys S-Down" "resize-pane -D"
bind -n S-LEFT if-shell "$is_vim" "send-keys S-Left" "resize-pane -L"
bind -n S-RIGHT if-shell "$is_vim" "send-keys S-Right" "resize-pane -R"

# Scroll w/ mouse
set-option -g mouse on
bind -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
bind -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
bind -T copy-mode-vi WheelUpPane send-keys -X scroll-up
bind -T copy-mode-vi WheelDownPane send-keys -X scroll-down

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Mock more vim keybindings in copy-mode
bind -T copy-mode-vi C-v send-keys -X rectangle-toggle  # Block select enable/disable. Still need to 'v'
bind -T copy-mode-vi v send-keys -X begin-selection  # Start visual selection
bind -T copy-mode-vi y send-keys -X copy-pipe "pbcopy"  # Copy to system clipboard

# Use prefix-space to enter copy mode instead of prefix-[
bind Space copy-mode

#######################
# Tmux Plugin Manager #
#######################

# List of plugins
set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'seebi/tmux-colors-solarized'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tpm'

# Tmux Plugin Options

set -g @colors-solarized 'dark'

# Source with plugin options set
run -b '~/.tmux/plugins/tpm/tpm'
